/* min-breakpoint-mobile-wide :      480px */
/* $min-breakpoint-tablet :          768px */
/* $min-breakpoint-desktop :         980px */
/* $min-breakpoint-desktop-wide :    1280px */
/* $max-breakpoint-mobile-narrow :  479px */
/* $max-breakpoint-mobile :         767px */
/* $max-breakpoint-tablet :         979px */
/* $max-breakpoint-desktop :        1279px */
/* ! SipaUI - framework CSS et JS du groupe SIPA */
/* ! Version 0 0.1 alpha */
/* Point de rupture desktop (980px) */
@media only screen and (min-width: 61.25em) {
  /* Styles des contenus de base */
  /* -- LISTES -------------------------------------------------------------------- */ }

/* Point de rupture desktop (980px) */
/* min-breakpoint-mobile-wide :      480px */
/* $min-breakpoint-tablet :          768px */
/* $min-breakpoint-desktop :         980px */
/* $min-breakpoint-desktop-wide :    1280px */
/* $max-breakpoint-mobile-narrow :  479px */
/* $max-breakpoint-mobile :         767px */
/* $max-breakpoint-tablet :         979px */
/* $max-breakpoint-desktop :        1279px */
/* ! SipaUI - framework CSS et JS du groupe SIPA */
/* ! Version 0 0.1 alpha */
/* Point de rupture desktop (980px) */
@media only screen and (min-width: 61.25em) {
  /* Styles des contenus de base */
  /* -- LISTES -------------------------------------------------------------------- */ }

/* Point de rupture desktop (980px) */
/* Point de rupture desktop (980px) */
@media only screen and (min-width: 61.25em) {
  main {
    padding-left: 10%;
    padding-right: 10%; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
